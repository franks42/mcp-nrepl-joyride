🚀 Starting MCP-nREPL Proxy HTTP Server...
📍 Connecting to Joyride nREPL on port 62577
🌐 HTTP server will listen on port 3000
🔗 MCP endpoint: http://localhost:3000/mcp
💚 Health check: http://localhost:3000/health
----------------------------------------
[info] 🔧 MCP-nREPL Proxy Configuration:
[info]    Debug mode:true
[info]    Workspace:/Users/franksiebenlist/Development/mcp-nrepl-joyride
[info]    Transport::http
[info]    HTTP port:3000
[info]    Babashka nREPL port:7889
[info] Starting nREPL heartbeat monitor
[info] 🔧 Starting Babashka nREPL server on port:7889
Started nREPL server at 0.0.0.0:7889
[info] ✅ Babashka nREPL server started - connect Calva to localhost:7889
[info] 🔍 Found nREPL port:62577
[info] Connecting to nREPL atlocalhost:62577
[info] Connected to nREPL successfully
[info] ✅ Auto-connected to Joyride nREPL
[info] 🚀 MCP-nREPL proxy server starting (HTTP)
[info] 📡 Listening for HTTP MCP requests on port3000
[info] 🔗 MCP endpoint: http://localhost:3000/mcp
[info] 💚 Health check: http://localhost:3000/health
[info] ✅ HTTP server started on port3000
[debug] 📥 HTTP request::post/mcp
[debug] Handling request:initialize
[debug] 📤 HTTP response for method:initialize
[debug] 📥 HTTP request::post/mcp
[debug] Handling request:tools/list
[debug] 📤 HTTP response for method:tools/list
[debug] 📥 HTTP request::post/mcp
[debug] Handling request:initialize
[debug] 📤 HTTP response for method:initialize
[debug] 📥 HTTP request::post/mcp
[debug] Handling request:tools/list
[debug] 📤 HTTP response for method:tools/list
[debug] 📥 HTTP request::post/mcp
[debug] Handling request:tools/call
[debug] Calling tool:nrepl-load-filewith args:{:file-path "/Users/franksiebenlist/Development/mcp-nrepl-joyride/test-file.clj"}
[nREPL] 📤 Sending: {:op "load-file", :file "(ns test.example\n  \"A simple test namespace for testing nrepl-load-file\")\n\n(defn greet\n  \"A simple greeting function\"\n  [name]\n  (str \"Hello, \" name \"!\"))\n\n(def pi 3.14159)\n\n(println \"test-file.clj loaded successfully!\")", :file-path "/Users/franksiebenlist/Development/mcp-nrepl-joyride/test-file.clj", :file-name "test-file.clj", :id "c8851fda-deab-4258-80e0-c36cbf2d4e25"}
[nREPL] 📥 Received response: {:id c8851fda-deab-4258-80e0-c36cbf2d4e25, :out test-file.clj loaded successfully!}
[nREPL] 📥 Received response: {:id c8851fda-deab-4258-80e0-c36cbf2d4e25, :out 
}
[nREPL] 📥 Received response: {:id c8851fda-deab-4258-80e0-c36cbf2d4e25, :ns user, :value nil}
[nREPL] 📥 Received response: {:id c8851fda-deab-4258-80e0-c36cbf2d4e25, :status [done]}
[nREPL] 📥 Final merged response: {:out test-file.clj loaded successfully!
, :value nil, :ns user, :status [done]}
[debug] Load-file result:{:out "test-file.clj loaded successfully!\n", :value "nil", :ns "user", :status ["done"]}
[debug] 📤 HTTP response for method:tools/call
[debug] 📥 HTTP request::post/mcp
[debug] Handling request:initialize
[debug] 📤 HTTP response for method:initialize
[debug] 📥 HTTP request::post/mcp
[debug] Handling request:tools/list
[debug] 📤 HTTP response for method:tools/list
[debug] 📥 HTTP request::post/mcp
[debug] Handling request:tools/call
[debug] Calling tool:nrepl-evalwith args:{:code "(test.example/greet \"World\")"}
[nREPL] 📤 Sending: {:op "eval", :code "(test.example/greet \"World\")", :id "203e4577-8cd0-4d2d-a3fc-e28350cdac08"}
[nREPL] 📥 Received response: {:id 203e4577-8cd0-4d2d-a3fc-e28350cdac08, :ns test.example, :value "Hello, World!"}
[nREPL] 📥 Received response: {:id 203e4577-8cd0-4d2d-a3fc-e28350cdac08, :status [done]}
[nREPL] 📥 Final merged response: {:value "Hello, World!", :ns test.example, :status [done]}
[debug] nREPL result:{:value "\"Hello, World!\"", :ns "test.example", :status ["done"]}
[debug] Result keys:(:value :ns :status)
[debug] Value field exists?true
[debug] Value field content:"\"Hello, World!\""
[debug] Output field content:nil
[debug] Response decision: has-meaningful-value=true has-output= has-error=
[debug] 📤 HTTP response for method:tools/call
[debug] 📥 HTTP request::post/mcp
[debug] Handling request:initialize
[debug] 📤 HTTP response for method:initialize
[debug] 📥 HTTP request::post/mcp
[debug] Handling request:tools/list
[debug] 📤 HTTP response for method:tools/list
[debug] 📥 HTTP request::post/mcp
[debug] Handling request:tools/call
[debug] Calling tool:nrepl-evalwith args:{:code "test.example/pi"}
[nREPL] 📤 Sending: {:op "eval", :code "test.example/pi", :id "0b7fac1e-0c96-4d0f-8199-a542d400a704"}
[nREPL] 📥 Received response: {:id 0b7fac1e-0c96-4d0f-8199-a542d400a704, :ns test.example, :value 3.14159}
[nREPL] 📥 Received response: {:id 0b7fac1e-0c96-4d0f-8199-a542d400a704, :status [done]}
[nREPL] 📥 Final merged response: {:value 3.14159, :ns test.example, :status [done]}
[debug] nREPL result:{:value "3.14159", :ns "test.example", :status ["done"]}
[debug] Result keys:(:value :ns :status)
[debug] Value field exists?true
[debug] Value field content:"3.14159"
[debug] Output field content:nil
[debug] Response decision: has-meaningful-value=true has-output= has-error=
[debug] 📤 HTTP response for method:tools/call
[debug] 📥 HTTP request::post/mcp
[debug] Handling request:initialize
[debug] 📤 HTTP response for method:initialize
[debug] 📥 HTTP request::post/mcp
[debug] Handling request:tools/list
[debug] 📤 HTTP response for method:tools/list
[debug] 📥 HTTP request::post/mcp
[debug] Handling request:tools/call
[debug] Calling tool:nrepl-load-filewith args:{:file-path "/Users/franksiebenlist/Development/mcp-nrepl-joyride/non-existent.clj"}
[error] Load-file failed:File not found: /Users/franksiebenlist/Development/mcp-nrepl-joyride/non-existent.clj
[debug] 📤 HTTP response for method:tools/call
[debug] 📥 HTTP request::post/mcp
[debug] Handling request:initialize
[debug] 📤 HTTP response for method:initialize
[debug] 📥 HTTP request::post/mcp
[debug] Handling request:tools/list
[debug] 📤 HTTP response for method:tools/list
[debug] 📥 HTTP request::post/mcp
[debug] Handling request:tools/call
[debug] Calling tool:nrepl-evalwith args:{:code "(+ 1 2 3)"}
[nREPL] 📤 Sending: {:op "eval", :code "(+ 1 2 3)", :id "87b1de02-43f5-4528-92f3-ede10256dcb1"}
[nREPL] 📥 Received response: {:id 87b1de02-43f5-4528-92f3-ede10256dcb1, :ns test.example, :value 6}
[nREPL] 📥 Received response: {:id 87b1de02-43f5-4528-92f3-ede10256dcb1, :status [done]}
[nREPL] 📥 Final merged response: {:value 6, :ns test.example, :status [done]}
[debug] nREPL result:{:value "6", :ns "test.example", :status ["done"]}
[debug] Result keys:(:value :ns :status)
[debug] Value field exists?true
[debug] Value field content:"6"
[debug] Output field content:nil
[debug] Response decision: has-meaningful-value=true has-output= has-error=
[debug] 📤 HTTP response for method:tools/call
