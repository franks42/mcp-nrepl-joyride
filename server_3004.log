[info] 🔧 MCP-nREPL Proxy Configuration:
[info]    Debug mode:true
[info]    Workspace:/Users/franksiebenlist/Development/mcp-nrepl-joyride
[info]    Transport::http
[info]    HTTP port:3004
[info]    Babashka nREPL port:7889
[info] Starting nREPL heartbeat monitor
[info] 🔧 Starting Babashka nREPL server on port:7889
Started nREPL server at 0.0.0.0:7889
[info] ✅ Babashka nREPL server started - connect Calva to localhost:7889
[info] Found nREPL port62577in/Users/franksiebenlist/Development/mcp-nrepl-joyride/.joyride/.nrepl-port
[info] 🔍 Found nREPL port:62577
[info] Connecting to nREPL atlocalhost:62577
[info] Connected to nREPL successfully
[info] ✅ Auto-connected to Joyride nREPL
[info] 🚀 MCP-nREPL proxy server starting (HTTP)
[info] 📡 Listening for HTTP MCP requests on port3004
[info] 🔗 MCP endpoint: http://localhost:3004/mcp
[info] 💚 Health check: http://localhost:3004/health
[info] ✅ HTTP server started on port3004
[debug] 📥 HTTP request::get/health
[debug] 📥 HTTP request::get/health
[debug] 📥 HTTP request::post/mcp
[debug] Handling request:initialize
[debug] 📤 HTTP response for method:initialize
[debug] 📥 HTTP request::post/mcp
[debug] Handling request:tools/list
[debug] 📤 HTTP response for method:tools/list
[debug] 📥 HTTP request::post/mcp
[debug] Handling request:tools/call
[debug] Calling tool:get-mcp-nrepl-contextwith args:{}
[debug] 📤 HTTP response for method:tools/call
[debug] 📥 HTTP request::get/health
[debug] 📥 HTTP request::post/mcp
[debug] Handling request:initialize
[debug] 📤 HTTP response for method:initialize
[debug] 📥 HTTP request::post/mcp
[debug] Handling request:tools/list
[debug] 📤 HTTP response for method:tools/list
[debug] 📥 HTTP request::post/mcp
[debug] Handling request:tools/call
[debug] Calling tool:nrepl-evalwith args:{:code "(+ 2 3)"}
[nREPL] 📤 Sending: {:op "eval", :code "(+ 2 3)", :id "9d5d9e12-07c2-483c-9324-996fc35b7812"}
[nREPL] 📥 Received response: {:id 9d5d9e12-07c2-483c-9324-996fc35b7812, :ns test.example, :value 5}
[nREPL] 📥 Received response: {:id 9d5d9e12-07c2-483c-9324-996fc35b7812, :status [done]}
[nREPL] 📥 Final merged response: {:value 5, :ns test.example, :status [done]}
[debug] nREPL result:{:value "5", :ns "test.example", :status ["done"]}
[debug] Result keys:(:value :ns :status)
[debug] Value field exists?true
[debug] Value field content:"5"
[debug] Output field content:nil
[debug] Response decision: has-meaningful-value=true has-output= has-error=
[debug] 📤 HTTP response for method:tools/call
[debug] 📥 HTTP request::post/mcp
[debug] Handling request:initialize
[debug] 📤 HTTP response for method:initialize
[debug] 📥 HTTP request::post/mcp
[debug] Handling request:tools/list
[debug] 📤 HTTP response for method:tools/list
[debug] 📥 HTTP request::post/mcp
[debug] Handling request:tools/call
[debug] Calling tool:nrepl-evalwith args:{:code "(str \"hello\" \" \" \"world\")"}
[nREPL] 📤 Sending: {:op "eval", :code "(str \"hello\" \" \" \"world\")", :id "6d2e56da-6952-4f8c-9d33-d94c706ac0c7"}
[nREPL] 📥 Received response: {:id 6d2e56da-6952-4f8c-9d33-d94c706ac0c7, :ns test.example, :value "hello world"}
[nREPL] 📥 Received response: {:id 6d2e56da-6952-4f8c-9d33-d94c706ac0c7, :status [done]}
[nREPL] 📥 Final merged response: {:value "hello world", :ns test.example, :status [done]}
[debug] nREPL result:{:value "\"hello world\"", :ns "test.example", :status ["done"]}
[debug] Result keys:(:value :ns :status)
[debug] Value field exists?true
[debug] Value field content:"\"hello world\""
[debug] Output field content:nil
[debug] Response decision: has-meaningful-value=true has-output= has-error=
[debug] 📤 HTTP response for method:tools/call
[debug] 📥 HTTP request::post/mcp
[debug] Handling request:initialize
[debug] 📤 HTTP response for method:initialize
[debug] 📥 HTTP request::post/mcp
[debug] Handling request:tools/list
[debug] 📤 HTTP response for method:tools/list
[debug] 📥 HTTP request::post/mcp
[debug] Handling request:tools/call
[debug] Calling tool:nrepl-statuswith args:{}
[debug] 📤 HTTP response for method:tools/call
